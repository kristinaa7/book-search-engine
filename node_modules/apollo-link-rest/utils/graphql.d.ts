import { DocumentNode } from 'graphql';
import { FragmentMap } from '@apollo/client/utilities';
import { Resolver } from '../restLink';
declare type ResultMapper = (values: {
    [fieldName: string]: any;
}, rootValue: any) => any;
declare type FragmentMatcher = (rootValue: any, typeCondition: string, context: any) => boolean;
export declare type ExecContext = {
    fragmentMap: FragmentMap;
    contextValue: any;
    variableValues: VariableMap;
    resultMapper: ResultMapper;
    resolver: Resolver;
    fragmentMatcher: FragmentMatcher;
};
declare type ExecOptions = {
    resultMapper?: ResultMapper;
    fragmentMatcher?: FragmentMatcher;
};
declare type VariableMap = {
    [name: string]: any;
};
export declare function graphql(resolver: Resolver, document: DocumentNode, rootValue?: any, contextValue?: any, variableValues?: VariableMap, execOptions?: ExecOptions): Promise<null | Object>;
export {};
